version: "3"
services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: global_technology_frontend
    environment:
      - VUE_APP_API_HOST=$API_HOST
    volumes:
      - shared_storage:/usr/share/nginx/html/storage
    ports:
      - "8080:8080"
    depends_on:
      - api
    restart: always
  
  frontend-dev:
    build: 
      context: ./frontend
      dockerfile: dev.Dockerfile

    container_name: global_technology_frontend_dev
    environment:
      - VUE_APP_API_HOST=$API_HOST
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - shared_storage:/app/public/storage
    ports:
      - "8081:8080"
    depends_on:
      - api
    command: npm run serve -- --public 0.0.0.0:8080

  api:
    build: ./api
    container_name: global_technology_api
    volumes:
      - ./api:/app
      - api_node_modules:/app/node_modules
      - shared_storage:/app/storage
    ports:
      - 80:80
    environment:
      - TOKEN_SECRET=$TOKEN_SECRET
      - DB_HOST=database
      - DB_USER=$MYSQL_ROOT_USER
      - DB_PASSWORD=$MYSQL_ROOT_PASSWORD
      - DB_NAME=$MYSQL_DATABASE
      - DB_PORT=3307
    depends_on:
      - database
    restart: always
          
  phpmyadmin:
    image: phpmyadmin
    container_name: global_technology_phpmyadmin
    restart: always
    expose:
      - "40001"
    ports:
      - 40001:80
    environment:
      - PMA_HOST=database
      - PMA_PORT=3306
    depends_on:
      - database

  database:
    image: mariadb:10.10.2
    container_name: global_technology_database
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
    ports:
      - 3307:3306
    volumes:
      - ./database/backup/global_technology.sql:/docker-entrypoint-initdb.d/global_technology.sql
      - db_data:/var/lib/mysql
    restart: always

  database-backup:
    build: ./database
    container_name: global_technology_database_backup
    environment:
      MYSQL_CONTAINER_NAME: database
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./database/backup:/opt/mysql/backup
    depends_on:
      - database
    command: crond -f -d 8
    restart: always


volumes:
  db_data:
  frontend_node_modules:
  api_node_modules:
  shared_storage: